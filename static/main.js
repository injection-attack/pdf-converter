// DOM ÏöîÏÜåÎì§
const uploadArea = document.getElementById('uploadArea');
const fileInput = document.getElementById('fileInput');
const fileList = document.getElementById('fileList');
const filesContainer = document.getElementById('files');
const convertBtn = document.getElementById('convertBtn');
const clearBtn = document.getElementById('clearBtn');
const progress = document.getElementById('progress');
const progressFill = document.getElementById('progressFill');
const progressText = document.getElementById('progressText');
const result = document.getElementById('result');
const downloadLink = document.getElementById('downloadLink');
const qualitySlider = document.getElementById('quality');
const qualityValue = document.getElementById('qualityValue');

// Ï†ÑÏó≠ Î≥ÄÏàò
let selectedFiles = [];

// ÌíàÏßà Ïä¨ÎùºÏù¥Îçî Ïù¥Î≤§Ìä∏
qualitySlider.addEventListener('input', (e) => {
    qualityValue.textContent = e.target.value;
});

// ÎìúÎûòÍ∑∏ Ïï§ ÎìúÎ°≠ Ïù¥Î≤§Ìä∏
uploadArea.addEventListener('click', () => {
    fileInput.click();
});

uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.classList.add('dragover');
});

uploadArea.addEventListener('dragleave', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('dragover');
});

uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('dragover');
    
    const files = Array.from(e.dataTransfer.files);
    handleFiles(files);
});

// ÌååÏùº ÏÑ†ÌÉù Ïù¥Î≤§Ìä∏
fileInput.addEventListener('change', (e) => {
    const files = Array.from(e.target.files);
    handleFiles(files);
});

// ÌååÏùº Ï≤òÎ¶¨ Ìï®Ïàò
function handleFiles(files) {
    // Ïù¥ÎØ∏ÏßÄ ÌååÏùºÎßå ÌïÑÌÑ∞ÎßÅ
    const imageFiles = files.filter(file => {
        return file.type.startsWith('image/');
    });
    
    if (imageFiles.length === 0) {
        alert('‚ùå Ïù¥ÎØ∏ÏßÄ ÌååÏùºÎßå ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî!');
        return;
    }
    
    // Í∏∞Ï°¥ ÌååÏùºÏóê Ï∂îÍ∞Ä
    selectedFiles = [...selectedFiles, ...imageFiles];
    
    // Ï§ëÎ≥µ Ï†úÍ±∞ (ÌååÏùºÎ™Ö Í∏∞Ï§Ä)
    const uniqueFiles = [];
    const fileNames = new Set();
    
    selectedFiles.forEach(file => {
        if (!fileNames.has(file.name)) {
            fileNames.add(file.name);
            uniqueFiles.push(file);
        }
    });
    
    selectedFiles = uniqueFiles;
    updateFileList();
    updateButtons();
}

// ÌååÏùº Î¶¨Ïä§Ìä∏ ÏóÖÎç∞Ïù¥Ìä∏
function updateFileList() {
    if (selectedFiles.length === 0) {
        fileList.style.display = 'none';
        return;
    }
    
    fileList.style.display = 'block';
    
    filesContainer.innerHTML = selectedFiles.map((file, index) => {
        const fileSize = formatFileSize(file.size);
        const fileIcon = getFileIcon(file.type);
        
        return `
            <div class="file-item">
                <div class="file-info">
                    <div class="file-icon">${fileIcon}</div>
                    <div class="file-details">
                        <div class="file-name">${file.name}</div>
                        <div class="file-size">${fileSize}</div>
                    </div>
                </div>
                <button class="file-remove" onclick="removeFile(${index})">
                    üóëÔ∏è Ï†úÍ±∞
                </button>
            </div>
        `;
    }).join('');
}

// ÌååÏùº Ï†úÍ±∞
function removeFile(index) {
    selectedFiles.splice(index, 1);
    updateFileList();
    updateButtons();
}

// Î™®Îì† ÌååÏùº Ï†úÍ±∞
clearBtn.addEventListener('click', () => {
    selectedFiles = [];
    fileInput.value = '';
    updateFileList();
    updateButtons();
    hideResult();
});

// Î≤ÑÌäº ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
function updateButtons() {
    convertBtn.disabled = selectedFiles.length === 0;
}

// ÌååÏùº ÌÅ¨Í∏∞ Ìè¨Îß∑
function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// ÌååÏùº ÏïÑÏù¥ÏΩò
function getFileIcon(fileType) {
    if (fileType.includes('jpeg') || fileType.includes('jpg')) return 'üñºÔ∏è';
    if (fileType.includes('png')) return 'üé®';
    if (fileType.includes('gif')) return 'üé≠';
    if (fileType.includes('bmp')) return 'üñåÔ∏è';
    if (fileType.includes('tiff')) return 'üì∏';
    if (fileType.includes('webp')) return 'üåê';
    return 'üñºÔ∏è';
}

// PDF Î≥ÄÌôò
convertBtn.addEventListener('click', async () => {
    if (selectedFiles.length === 0) {
        alert('‚ùå Î≥ÄÌôòÌï† Ïù¥ÎØ∏ÏßÄÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî!');
        return;
    }
    
    // UI ÏÉÅÌÉú Î≥ÄÍ≤Ω
    showProgress();
    convertBtn.disabled = true;
    
    try {
        // FormData ÏÉùÏÑ±
        const formData = new FormData();
        
        selectedFiles.forEach(file => {
            formData.append('files', file);
        });
        
        formData.append('quality', qualitySlider.value);
        
        // Î≥ÄÌôò ÏöîÏ≤≠
        updateProgress(0, 'Î≥ÄÌôò Ï§ÄÎπÑ Ï§ë...');
        
        const response = await fetch('/convert', {
            method: 'POST',
            body: formData
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        updateProgress(100, 'Î≥ÄÌôò ÏôÑÎ£å!');
        
        // PDF Îã§Ïö¥Î°úÎìú
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        
        showResult(url);
        
    } catch (error) {
        console.error('Î≥ÄÌôò Ïò§Î•ò:', error);
        alert('‚ùå Î≥ÄÌôò Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + error.message);
        hideProgress();
    } finally {
        convertBtn.disabled = false;
    }
});

// ÏßÑÌñâ ÏÉÅÌô© ÌëúÏãú
function showProgress() {
    progress.style.display = 'block';
    result.style.display = 'none';
}

function updateProgress(percent, text) {
    progressFill.style.width = percent + '%';
    progressText.textContent = text;
}

function hideProgress() {
    progress.style.display = 'none';
}

// Í≤∞Í≥º ÌëúÏãú
function showResult(downloadUrl) {
    hideProgress();
    result.style.display = 'block';
    
    // Îã§Ïö¥Î°úÎìú ÎßÅÌÅ¨ ÏÑ§Ï†ï
    downloadLink.href = downloadUrl;
    
    // ÌååÏùºÎ™Ö ÏÉùÏÑ± (ÌòÑÏû¨ ÏãúÍ∞Ñ Í∏∞Î∞ò)
    const now = new Date();
    const timestamp = now.toISOString().slice(0, 19).replace(/[:-]/g, '');
    downloadLink.download = `converted_images_${timestamp}.pdf`;
    
    // ÏûêÎèô Îã§Ïö¥Î°úÎìú
    downloadLink.click();
}

function hideResult() {
    result.style.display = 'none';
}

// ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï¥àÍ∏∞Ìôî
document.addEventListener('DOMContentLoaded', () => {
    updateButtons();
    
    // ÎìúÎûòÍ∑∏ Ïï§ ÎìúÎ°≠ Ï†ÑÏó≠ Î∞©ÏßÄ (ÌéòÏù¥ÏßÄ Ï†ÑÏ≤¥ÏóêÏÑú)
    document.addEventListener('dragover', (e) => {
        e.preventDefault();
    });
    
    document.addEventListener('drop', (e) => {
        e.preventDefault();
    });
});